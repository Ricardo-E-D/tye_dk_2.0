//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("db", "FK_EyeTestInfo_EyeTest", "EyeTest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.EyeTest), "EyeTestInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.EyeTestInfo), true)]
[assembly: EdmRelationshipAttribute("db", "FK_EyeTestInfo_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.Language), "EyeTestInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.EyeTestInfo), true)]
[assembly: EdmRelationshipAttribute("db", "FK_ProgramEyeTest_EyeTest", "EyeTest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.EyeTest), "ProgramEyeTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.ProgramEyeTest), true)]
[assembly: EdmRelationshipAttribute("db", "FK_ProgramEyeTest_Program", "Program", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.Program), "ProgramEyeTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.ProgramEyeTest), true)]
[assembly: EdmRelationshipAttribute("db", "FK_ClientEyeTestLog_ProgramEyeTest", "ProgramEyeTest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.ProgramEyeTest), "ClientEyeTestLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.ClientEyeTestLog), true)]
[assembly: EdmRelationshipAttribute("db", "FK_EquipmentItem_Equipment", "Equipment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.Equipment), "EquipmentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.EquipmentItem), true)]
[assembly: EdmRelationshipAttribute("db", "FK_EquipmentItemInfo_EquipmentItem", "EquipmentItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.EquipmentItem), "EquipmentItemInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.EquipmentItemInfo), true)]
[assembly: EdmRelationshipAttribute("db", "FK_EquipmentItemInfo_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.Language), "EquipmentItemInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.EquipmentItemInfo), true)]
[assembly: EdmRelationshipAttribute("db", "FK_EquipmentInfo_Equipment", "Equipment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.Equipment), "EquipmentInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.EquipmentInfo), true)]
[assembly: EdmRelationshipAttribute("db", "FK_EquipmentInfo_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.Language), "EquipmentInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.EquipmentInfo), true)]
[assembly: EdmRelationshipAttribute("db", "FK_ActivationCode_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tye.db.User), "ActivationCode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.ActivationCode), true)]
[assembly: EdmRelationshipAttribute("db", "FK_Anamnese_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.User), "Anamnese", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.Anamnese), true)]
[assembly: EdmRelationshipAttribute("db", "FK_User_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.Country), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.User), true)]
[assembly: EdmRelationshipAttribute("db", "FK_User_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tye.db.Language), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.User), true)]
[assembly: EdmRelationshipAttribute("db", "FK_Measuring21_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.User), "Measuring21", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.Measuring21), true)]
[assembly: EdmRelationshipAttribute("db", "FK_MeasuringControl_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.User), "MeasuringControl", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.MeasuringControl), true)]
[assembly: EdmRelationshipAttribute("db", "FK_OpticianClient_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.User), "OpticianClient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.OpticianClient), true)]
[assembly: EdmRelationshipAttribute("db", "FK_Program_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(tye.db.User), "Program", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.Program), true)]
[assembly: EdmRelationshipAttribute("db", "FK_User_UserType", "UserType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(tye.db.UserType), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(tye.db.User), true)]

#endregion

namespace tye.db
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabaseEntities object using the connection string found in the 'DatabaseEntities' section of the application configuration file.
        /// </summary>
        public DatabaseEntities() : base("name=DatabaseEntities", "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(string connectionString) : base(connectionString, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(EntityConnection connection) : base(connection, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DictionaryEntry> DictionaryEntries
        {
            get
            {
                if ((_DictionaryEntries == null))
                {
                    _DictionaryEntries = base.CreateObjectSet<DictionaryEntry>("DictionaryEntries");
                }
                return _DictionaryEntries;
            }
        }
        private ObjectSet<DictionaryEntry> _DictionaryEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Language>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Language> _Languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OpticianClient> OpticianClients
        {
            get
            {
                if ((_OpticianClients == null))
                {
                    _OpticianClients = base.CreateObjectSet<OpticianClient>("OpticianClients");
                }
                return _OpticianClients;
            }
        }
        private ObjectSet<OpticianClient> _OpticianClients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserType> UserTypes
        {
            get
            {
                if ((_UserTypes == null))
                {
                    _UserTypes = base.CreateObjectSet<UserType>("UserTypes");
                }
                return _UserTypes;
            }
        }
        private ObjectSet<UserType> _UserTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivationCode> ActivationCodes
        {
            get
            {
                if ((_ActivationCodes == null))
                {
                    _ActivationCodes = base.CreateObjectSet<ActivationCode>("ActivationCodes");
                }
                return _ActivationCodes;
            }
        }
        private ObjectSet<ActivationCode> _ActivationCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EyeTest> EyeTests
        {
            get
            {
                if ((_EyeTests == null))
                {
                    _EyeTests = base.CreateObjectSet<EyeTest>("EyeTests");
                }
                return _EyeTests;
            }
        }
        private ObjectSet<EyeTest> _EyeTests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EyeTestInfo> EyeTestInfos
        {
            get
            {
                if ((_EyeTestInfos == null))
                {
                    _EyeTestInfos = base.CreateObjectSet<EyeTestInfo>("EyeTestInfos");
                }
                return _EyeTestInfos;
            }
        }
        private ObjectSet<EyeTestInfo> _EyeTestInfos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Program> Programs
        {
            get
            {
                if ((_Programs == null))
                {
                    _Programs = base.CreateObjectSet<Program>("Programs");
                }
                return _Programs;
            }
        }
        private ObjectSet<Program> _Programs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProgramEyeTest> ProgramEyeTests
        {
            get
            {
                if ((_ProgramEyeTests == null))
                {
                    _ProgramEyeTests = base.CreateObjectSet<ProgramEyeTest>("ProgramEyeTests");
                }
                return _ProgramEyeTests;
            }
        }
        private ObjectSet<ProgramEyeTest> _ProgramEyeTests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeasuringControl> MeasuringControls
        {
            get
            {
                if ((_MeasuringControls == null))
                {
                    _MeasuringControls = base.CreateObjectSet<MeasuringControl>("MeasuringControls");
                }
                return _MeasuringControls;
            }
        }
        private ObjectSet<MeasuringControl> _MeasuringControls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Measuring21> Measuring21
        {
            get
            {
                if ((_Measuring21 == null))
                {
                    _Measuring21 = base.CreateObjectSet<Measuring21>("Measuring21");
                }
                return _Measuring21;
            }
        }
        private ObjectSet<Measuring21> _Measuring21;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientEyeTestLog> ClientEyeTestLogs
        {
            get
            {
                if ((_ClientEyeTestLogs == null))
                {
                    _ClientEyeTestLogs = base.CreateObjectSet<ClientEyeTestLog>("ClientEyeTestLogs");
                }
                return _ClientEyeTestLogs;
            }
        }
        private ObjectSet<ClientEyeTestLog> _ClientEyeTestLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Anamnese> Anamnese
        {
            get
            {
                if ((_Anamnese == null))
                {
                    _Anamnese = base.CreateObjectSet<Anamnese>("Anamnese");
                }
                return _Anamnese;
            }
        }
        private ObjectSet<Anamnese> _Anamnese;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Equipment> Equipments
        {
            get
            {
                if ((_Equipments == null))
                {
                    _Equipments = base.CreateObjectSet<Equipment>("Equipments");
                }
                return _Equipments;
            }
        }
        private ObjectSet<Equipment> _Equipments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipmentItem> EquipmentItems
        {
            get
            {
                if ((_EquipmentItems == null))
                {
                    _EquipmentItems = base.CreateObjectSet<EquipmentItem>("EquipmentItems");
                }
                return _EquipmentItems;
            }
        }
        private ObjectSet<EquipmentItem> _EquipmentItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipmentItemInfo> EquipmentItemInfoes
        {
            get
            {
                if ((_EquipmentItemInfoes == null))
                {
                    _EquipmentItemInfoes = base.CreateObjectSet<EquipmentItemInfo>("EquipmentItemInfoes");
                }
                return _EquipmentItemInfoes;
            }
        }
        private ObjectSet<EquipmentItemInfo> _EquipmentItemInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipmentInfo> EquipmentInfoes
        {
            get
            {
                if ((_EquipmentInfoes == null))
                {
                    _EquipmentInfoes = base.CreateObjectSet<EquipmentInfo>("EquipmentInfoes");
                }
                return _EquipmentInfoes;
            }
        }
        private ObjectSet<EquipmentInfo> _EquipmentInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EyeTestLink> EyeTestLinks
        {
            get
            {
                if ((_EyeTestLinks == null))
                {
                    _EyeTestLinks = base.CreateObjectSet<EyeTestLink>("EyeTestLinks");
                }
                return _EyeTestLinks;
            }
        }
        private ObjectSet<EyeTestLink> _EyeTestLinks;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DictionaryEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDictionaryEntries(DictionaryEntry dictionaryEntry)
        {
            base.AddObject("DictionaryEntries", dictionaryEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OpticianClients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOpticianClients(OpticianClient opticianClient)
        {
            base.AddObject("OpticianClients", opticianClient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserTypes(UserType userType)
        {
            base.AddObject("UserTypes", userType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivationCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivationCodes(ActivationCode activationCode)
        {
            base.AddObject("ActivationCodes", activationCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EyeTests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEyeTests(EyeTest eyeTest)
        {
            base.AddObject("EyeTests", eyeTest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EyeTestInfos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEyeTestInfos(EyeTestInfo eyeTestInfo)
        {
            base.AddObject("EyeTestInfos", eyeTestInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Programs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrograms(Program program)
        {
            base.AddObject("Programs", program);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProgramEyeTests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProgramEyeTests(ProgramEyeTest programEyeTest)
        {
            base.AddObject("ProgramEyeTests", programEyeTest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeasuringControls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeasuringControls(MeasuringControl measuringControl)
        {
            base.AddObject("MeasuringControls", measuringControl);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Measuring21 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeasuring21(Measuring21 measuring21)
        {
            base.AddObject("Measuring21", measuring21);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientEyeTestLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientEyeTestLogs(ClientEyeTestLog clientEyeTestLog)
        {
            base.AddObject("ClientEyeTestLogs", clientEyeTestLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Anamnese EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnamnese(Anamnese anamnese)
        {
            base.AddObject("Anamnese", anamnese);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Equipments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipments(Equipment equipment)
        {
            base.AddObject("Equipments", equipment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentItems(EquipmentItem equipmentItem)
        {
            base.AddObject("EquipmentItems", equipmentItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentItemInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentItemInfoes(EquipmentItemInfo equipmentItemInfo)
        {
            base.AddObject("EquipmentItemInfoes", equipmentItemInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentInfoes(EquipmentInfo equipmentInfo)
        {
            base.AddObject("EquipmentInfoes", equipmentInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EyeTestLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEyeTestLinks(EyeTestLink eyeTestLink)
        {
            base.AddObject("EyeTestLinks", eyeTestLink);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="ActivationCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivationCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivationCode object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="printed">Initial value of the Printed property.</param>
        public static ActivationCode CreateActivationCode(global::System.Int32 id, global::System.String code, global::System.Boolean printed)
        {
            ActivationCode activationCode = new ActivationCode();
            activationCode.ID = id;
            activationCode.Code = code;
            activationCode.Printed = printed;
            return activationCode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OpticianUserID
        {
            get
            {
                return _OpticianUserID;
            }
            set
            {
                OnOpticianUserIDChanging(value);
                ReportPropertyChanging("OpticianUserID");
                _OpticianUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpticianUserID");
                OnOpticianUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OpticianUserID;
        partial void OnOpticianUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnOpticianUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientUserID
        {
            get
            {
                return _ClientUserID;
            }
            set
            {
                OnClientUserIDChanging(value);
                ReportPropertyChanging("ClientUserID");
                _ClientUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientUserID");
                OnClientUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientUserID;
        partial void OnClientUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActivationDate
        {
            get
            {
                return _ActivationDate;
            }
            set
            {
                OnActivationDateChanging(value);
                ReportPropertyChanging("ActivationDate");
                _ActivationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivationDate");
                OnActivationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActivationDate;
        partial void OnActivationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActivationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Printed
        {
            get
            {
                return _Printed;
            }
            set
            {
                OnPrintedChanging(value);
                ReportPropertyChanging("Printed");
                _Printed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Printed");
                OnPrintedChanged();
            }
        }
        private global::System.Boolean _Printed;
        partial void OnPrintedChanging(global::System.Boolean value);
        partial void OnPrintedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AvailableToDistributorUserID
        {
            get
            {
                return _AvailableToDistributorUserID;
            }
            set
            {
                OnAvailableToDistributorUserIDChanging(value);
                ReportPropertyChanging("AvailableToDistributorUserID");
                _AvailableToDistributorUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AvailableToDistributorUserID");
                OnAvailableToDistributorUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AvailableToDistributorUserID;
        partial void OnAvailableToDistributorUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnAvailableToDistributorUserIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_ActivationCode_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_ActivationCode_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_ActivationCode_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_ActivationCode_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("db.FK_ActivationCode_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Anamnese")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Anamnese : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Anamnese object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="clientUserID">Initial value of the ClientUserID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static Anamnese CreateAnamnese(global::System.Int32 id, global::System.String data, global::System.Int32 clientUserID, global::System.DateTime created)
        {
            Anamnese anamnese = new Anamnese();
            anamnese.ID = id;
            anamnese.Data = data;
            anamnese.ClientUserID = clientUserID;
            anamnese.Created = created;
            return anamnese;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientUserID
        {
            get
            {
                return _ClientUserID;
            }
            set
            {
                OnClientUserIDChanging(value);
                ReportPropertyChanging("ClientUserID");
                _ClientUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientUserID");
                OnClientUserIDChanged();
            }
        }
        private global::System.Int32 _ClientUserID;
        partial void OnClientUserIDChanging(global::System.Int32 value);
        partial void OnClientUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_Anamnese_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_Anamnese_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_Anamnese_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_Anamnese_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("db.FK_Anamnese_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="ClientEyeTestLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientEyeTestLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientEyeTestLog object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="programEyeTestID">Initial value of the ProgramEyeTestID property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="updateToken">Initial value of the UpdateToken property.</param>
        public static ClientEyeTestLog CreateClientEyeTestLog(global::System.Int32 id, global::System.Int32 programEyeTestID, global::System.DateTime startTime, global::System.String updateToken)
        {
            ClientEyeTestLog clientEyeTestLog = new ClientEyeTestLog();
            clientEyeTestLog.ID = id;
            clientEyeTestLog.ProgramEyeTestID = programEyeTestID;
            clientEyeTestLog.StartTime = startTime;
            clientEyeTestLog.UpdateToken = updateToken;
            return clientEyeTestLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProgramEyeTestID
        {
            get
            {
                return _ProgramEyeTestID;
            }
            set
            {
                OnProgramEyeTestIDChanging(value);
                ReportPropertyChanging("ProgramEyeTestID");
                _ProgramEyeTestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProgramEyeTestID");
                OnProgramEyeTestIDChanged();
            }
        }
        private global::System.Int32 _ProgramEyeTestID;
        partial void OnProgramEyeTestIDChanging(global::System.Int32 value);
        partial void OnProgramEyeTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _Score;
        partial void OnScoreChanging(Nullable<global::System.Int32> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HighScore
        {
            get
            {
                return _HighScore;
            }
            set
            {
                OnHighScoreChanging(value);
                ReportPropertyChanging("HighScore");
                _HighScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighScore");
                OnHighScoreChanged();
            }
        }
        private Nullable<global::System.Boolean> _HighScore;
        partial void OnHighScoreChanging(Nullable<global::System.Boolean> value);
        partial void OnHighScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttribName
        {
            get
            {
                return _AttribName;
            }
            set
            {
                OnAttribNameChanging(value);
                ReportPropertyChanging("AttribName");
                _AttribName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttribName");
                OnAttribNameChanged();
            }
        }
        private global::System.String _AttribName;
        partial void OnAttribNameChanging(global::System.String value);
        partial void OnAttribNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttribValue
        {
            get
            {
                return _AttribValue;
            }
            set
            {
                OnAttribValueChanging(value);
                ReportPropertyChanging("AttribValue");
                _AttribValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttribValue");
                OnAttribValueChanged();
            }
        }
        private global::System.String _AttribValue;
        partial void OnAttribValueChanging(global::System.String value);
        partial void OnAttribValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UpdateToken
        {
            get
            {
                return _UpdateToken;
            }
            set
            {
                OnUpdateTokenChanging(value);
                ReportPropertyChanging("UpdateToken");
                _UpdateToken = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpdateToken");
                OnUpdateTokenChanged();
            }
        }
        private global::System.String _UpdateToken;
        partial void OnUpdateTokenChanging(global::System.String value);
        partial void OnUpdateTokenChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_ClientEyeTestLog_ProgramEyeTest", "ProgramEyeTest")]
        public ProgramEyeTest ProgramEyeTest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProgramEyeTest>("db.FK_ClientEyeTestLog_ProgramEyeTest", "ProgramEyeTest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProgramEyeTest>("db.FK_ClientEyeTestLog_ProgramEyeTest", "ProgramEyeTest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProgramEyeTest> ProgramEyeTestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProgramEyeTest>("db.FK_ClientEyeTestLog_ProgramEyeTest", "ProgramEyeTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProgramEyeTest>("db.FK_ClientEyeTestLog_ProgramEyeTest", "ProgramEyeTest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String name)
        {
            Country country = new Country();
            country.ID = id;
            country.Name = name;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_User_Country", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("db.FK_User_Country", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("db.FK_User_Country", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="DictionaryEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DictionaryEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DictionaryEntry object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="values">Initial value of the Values property.</param>
        /// <param name="systemEntry">Initial value of the SystemEntry property.</param>
        /// <param name="clientSide">Initial value of the ClientSide property.</param>
        public static DictionaryEntry CreateDictionaryEntry(global::System.Int32 id, global::System.String key, global::System.String values, global::System.Boolean systemEntry, global::System.Boolean clientSide)
        {
            DictionaryEntry dictionaryEntry = new DictionaryEntry();
            dictionaryEntry.ID = id;
            dictionaryEntry.Key = key;
            dictionaryEntry.Values = values;
            dictionaryEntry.SystemEntry = systemEntry;
            dictionaryEntry.ClientSide = clientSide;
            return dictionaryEntry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Values
        {
            get
            {
                return _Values;
            }
            set
            {
                OnValuesChanging(value);
                ReportPropertyChanging("Values");
                _Values = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Values");
                OnValuesChanged();
            }
        }
        private global::System.String _Values;
        partial void OnValuesChanging(global::System.String value);
        partial void OnValuesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SystemEntry
        {
            get
            {
                return _SystemEntry;
            }
            set
            {
                OnSystemEntryChanging(value);
                ReportPropertyChanging("SystemEntry");
                _SystemEntry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemEntry");
                OnSystemEntryChanged();
            }
        }
        private global::System.Boolean _SystemEntry;
        partial void OnSystemEntryChanging(global::System.Boolean value);
        partial void OnSystemEntryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ClientSide
        {
            get
            {
                return _ClientSide;
            }
            set
            {
                OnClientSideChanging(value);
                ReportPropertyChanging("ClientSide");
                _ClientSide = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientSide");
                OnClientSideChanged();
            }
        }
        private global::System.Boolean _ClientSide;
        partial void OnClientSideChanging(global::System.Boolean value);
        partial void OnClientSideChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Equipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Equipment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="picture">Initial value of the Picture property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Equipment CreateEquipment(global::System.Int32 id, global::System.Boolean active, global::System.String picture, global::System.String name)
        {
            Equipment equipment = new Equipment();
            equipment.ID = id;
            equipment.Active = active;
            equipment.Picture = picture;
            equipment.Name = name;
            return equipment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Picture
        {
            get
            {
                return _Picture;
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private global::System.String _Picture;
        partial void OnPictureChanging(global::System.String value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EquipmentItem_Equipment", "EquipmentItem")]
        public EntityCollection<EquipmentItem> EquipmentItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquipmentItem>("db.FK_EquipmentItem_Equipment", "EquipmentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquipmentItem>("db.FK_EquipmentItem_Equipment", "EquipmentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EquipmentInfo_Equipment", "EquipmentInfo")]
        public EntityCollection<EquipmentInfo> EquipmentInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquipmentInfo>("db.FK_EquipmentInfo_Equipment", "EquipmentInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquipmentInfo>("db.FK_EquipmentInfo_Equipment", "EquipmentInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="EquipmentInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipmentInfo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="equipmentID">Initial value of the EquipmentID property.</param>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static EquipmentInfo CreateEquipmentInfo(global::System.Int32 id, global::System.Int32 equipmentID, global::System.Int32 languageID, global::System.String name, global::System.String description)
        {
            EquipmentInfo equipmentInfo = new EquipmentInfo();
            equipmentInfo.ID = id;
            equipmentInfo.EquipmentID = equipmentID;
            equipmentInfo.LanguageID = languageID;
            equipmentInfo.Name = name;
            equipmentInfo.Description = description;
            return equipmentInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentID
        {
            get
            {
                return _EquipmentID;
            }
            set
            {
                OnEquipmentIDChanging(value);
                ReportPropertyChanging("EquipmentID");
                _EquipmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentID");
                OnEquipmentIDChanged();
            }
        }
        private global::System.Int32 _EquipmentID;
        partial void OnEquipmentIDChanging(global::System.Int32 value);
        partial void OnEquipmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                OnLanguageIDChanging(value);
                ReportPropertyChanging("LanguageID");
                _LanguageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageID");
                OnLanguageIDChanged();
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EquipmentInfo_Equipment", "Equipment")]
        public Equipment Equipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("db.FK_EquipmentInfo_Equipment", "Equipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("db.FK_EquipmentInfo_Equipment", "Equipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Equipment> EquipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("db.FK_EquipmentInfo_Equipment", "Equipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Equipment>("db.FK_EquipmentInfo_Equipment", "Equipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EquipmentInfo_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_EquipmentInfo_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_EquipmentInfo_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_EquipmentInfo_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("db.FK_EquipmentInfo_Language", "Language", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="EquipmentItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipmentItem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="equipmentID">Initial value of the EquipmentID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static EquipmentItem CreateEquipmentItem(global::System.Int32 id, global::System.Int32 equipmentID, global::System.Boolean active)
        {
            EquipmentItem equipmentItem = new EquipmentItem();
            equipmentItem.ID = id;
            equipmentItem.EquipmentID = equipmentID;
            equipmentItem.Active = active;
            return equipmentItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentID
        {
            get
            {
                return _EquipmentID;
            }
            set
            {
                OnEquipmentIDChanging(value);
                ReportPropertyChanging("EquipmentID");
                _EquipmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentID");
                OnEquipmentIDChanged();
            }
        }
        private global::System.Int32 _EquipmentID;
        partial void OnEquipmentIDChanging(global::System.Int32 value);
        partial void OnEquipmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EquipmentItem_Equipment", "Equipment")]
        public Equipment Equipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("db.FK_EquipmentItem_Equipment", "Equipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("db.FK_EquipmentItem_Equipment", "Equipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Equipment> EquipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("db.FK_EquipmentItem_Equipment", "Equipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Equipment>("db.FK_EquipmentItem_Equipment", "Equipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EquipmentItemInfo_EquipmentItem", "EquipmentItemInfo")]
        public EntityCollection<EquipmentItemInfo> EquipmentItemInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquipmentItemInfo>("db.FK_EquipmentItemInfo_EquipmentItem", "EquipmentItemInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquipmentItemInfo>("db.FK_EquipmentItemInfo_EquipmentItem", "EquipmentItemInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="EquipmentItemInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentItemInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipmentItemInfo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="equipmentItemID">Initial value of the EquipmentItemID property.</param>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static EquipmentItemInfo CreateEquipmentItemInfo(global::System.Int32 id, global::System.Int32 equipmentItemID, global::System.Int32 languageID, global::System.String description, global::System.Double price)
        {
            EquipmentItemInfo equipmentItemInfo = new EquipmentItemInfo();
            equipmentItemInfo.ID = id;
            equipmentItemInfo.EquipmentItemID = equipmentItemID;
            equipmentItemInfo.LanguageID = languageID;
            equipmentItemInfo.Description = description;
            equipmentItemInfo.Price = price;
            return equipmentItemInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentItemID
        {
            get
            {
                return _EquipmentItemID;
            }
            set
            {
                OnEquipmentItemIDChanging(value);
                ReportPropertyChanging("EquipmentItemID");
                _EquipmentItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentItemID");
                OnEquipmentItemIDChanged();
            }
        }
        private global::System.Int32 _EquipmentItemID;
        partial void OnEquipmentItemIDChanging(global::System.Int32 value);
        partial void OnEquipmentItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                OnLanguageIDChanging(value);
                ReportPropertyChanging("LanguageID");
                _LanguageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageID");
                OnLanguageIDChanged();
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EquipmentItemInfo_EquipmentItem", "EquipmentItem")]
        public EquipmentItem EquipmentItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentItem>("db.FK_EquipmentItemInfo_EquipmentItem", "EquipmentItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentItem>("db.FK_EquipmentItemInfo_EquipmentItem", "EquipmentItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EquipmentItem> EquipmentItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentItem>("db.FK_EquipmentItemInfo_EquipmentItem", "EquipmentItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EquipmentItem>("db.FK_EquipmentItemInfo_EquipmentItem", "EquipmentItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EquipmentItemInfo_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_EquipmentItemInfo_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_EquipmentItemInfo_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_EquipmentItemInfo_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("db.FK_EquipmentItemInfo_Language", "Language", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="EyeTest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EyeTest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EyeTest object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="oldBbName">Initial value of the OldBbName property.</param>
        /// <param name="screenTest">Initial value of the ScreenTest property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="highscoreApplicable">Initial value of the HighscoreApplicable property.</param>
        public static EyeTest CreateEyeTest(global::System.Int32 id, global::System.String name, global::System.String oldBbName, global::System.Boolean screenTest, global::System.Int32 priority, global::System.Boolean highscoreApplicable)
        {
            EyeTest eyeTest = new EyeTest();
            eyeTest.ID = id;
            eyeTest.Name = name;
            eyeTest.OldBbName = oldBbName;
            eyeTest.ScreenTest = screenTest;
            eyeTest.Priority = priority;
            eyeTest.HighscoreApplicable = highscoreApplicable;
            return eyeTest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OldBbName
        {
            get
            {
                return _OldBbName;
            }
            set
            {
                OnOldBbNameChanging(value);
                ReportPropertyChanging("OldBbName");
                _OldBbName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OldBbName");
                OnOldBbNameChanged();
            }
        }
        private global::System.String _OldBbName;
        partial void OnOldBbNameChanging(global::System.String value);
        partial void OnOldBbNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ScreenTest
        {
            get
            {
                return _ScreenTest;
            }
            set
            {
                OnScreenTestChanging(value);
                ReportPropertyChanging("ScreenTest");
                _ScreenTest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScreenTest");
                OnScreenTestChanged();
            }
        }
        private global::System.Boolean _ScreenTest;
        partial void OnScreenTestChanging(global::System.Boolean value);
        partial void OnScreenTestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScoreRequired
        {
            get
            {
                return _ScoreRequired;
            }
            set
            {
                OnScoreRequiredChanging(value);
                ReportPropertyChanging("ScoreRequired");
                _ScoreRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScoreRequired");
                OnScoreRequiredChanged();
            }
        }
        private Nullable<global::System.Int32> _ScoreRequired;
        partial void OnScoreRequiredChanging(Nullable<global::System.Int32> value);
        partial void OnScoreRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalName
        {
            get
            {
                return _InternalName;
            }
            set
            {
                OnInternalNameChanging(value);
                ReportPropertyChanging("InternalName");
                _InternalName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalName");
                OnInternalNameChanged();
            }
        }
        private global::System.String _InternalName;
        partial void OnInternalNameChanging(global::System.String value);
        partial void OnInternalNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HighscoreApplicable
        {
            get
            {
                return _HighscoreApplicable;
            }
            set
            {
                OnHighscoreApplicableChanging(value);
                ReportPropertyChanging("HighscoreApplicable");
                _HighscoreApplicable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighscoreApplicable");
                OnHighscoreApplicableChanged();
            }
        }
        private global::System.Boolean _HighscoreApplicable;
        partial void OnHighscoreApplicableChanging(global::System.Boolean value);
        partial void OnHighscoreApplicableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OpticianID
        {
            get
            {
                return _OpticianID;
            }
            set
            {
                OnOpticianIDChanging(value);
                ReportPropertyChanging("OpticianID");
                _OpticianID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpticianID");
                OnOpticianIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OpticianID;
        partial void OnOpticianIDChanging(Nullable<global::System.Int32> value);
        partial void OnOpticianIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EyeTestInfo_EyeTest", "EyeTestInfo")]
        public EntityCollection<EyeTestInfo> EyeTestInfos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EyeTestInfo>("db.FK_EyeTestInfo_EyeTest", "EyeTestInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EyeTestInfo>("db.FK_EyeTestInfo_EyeTest", "EyeTestInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_ProgramEyeTest_EyeTest", "ProgramEyeTest")]
        public EntityCollection<ProgramEyeTest> ProgramEyeTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProgramEyeTest>("db.FK_ProgramEyeTest_EyeTest", "ProgramEyeTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProgramEyeTest>("db.FK_ProgramEyeTest_EyeTest", "ProgramEyeTest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="EyeTestInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EyeTestInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EyeTestInfo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eyeTestID">Initial value of the EyeTestID property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="infoType">Initial value of the InfoType property.</param>
        /// <param name="infoText">Initial value of the InfoText property.</param>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        public static EyeTestInfo CreateEyeTestInfo(global::System.Int32 id, global::System.Int32 eyeTestID, global::System.Int32 priority, global::System.String infoType, global::System.String infoText, global::System.Int32 languageID)
        {
            EyeTestInfo eyeTestInfo = new EyeTestInfo();
            eyeTestInfo.ID = id;
            eyeTestInfo.EyeTestID = eyeTestID;
            eyeTestInfo.Priority = priority;
            eyeTestInfo.InfoType = infoType;
            eyeTestInfo.InfoText = infoText;
            eyeTestInfo.LanguageID = languageID;
            return eyeTestInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EyeTestID
        {
            get
            {
                return _EyeTestID;
            }
            set
            {
                OnEyeTestIDChanging(value);
                ReportPropertyChanging("EyeTestID");
                _EyeTestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EyeTestID");
                OnEyeTestIDChanged();
            }
        }
        private global::System.Int32 _EyeTestID;
        partial void OnEyeTestIDChanging(global::System.Int32 value);
        partial void OnEyeTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InfoType
        {
            get
            {
                return _InfoType;
            }
            set
            {
                OnInfoTypeChanging(value);
                ReportPropertyChanging("InfoType");
                _InfoType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InfoType");
                OnInfoTypeChanged();
            }
        }
        private global::System.String _InfoType;
        partial void OnInfoTypeChanging(global::System.String value);
        partial void OnInfoTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InfoText
        {
            get
            {
                return _InfoText;
            }
            set
            {
                OnInfoTextChanging(value);
                ReportPropertyChanging("InfoText");
                _InfoText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InfoText");
                OnInfoTextChanged();
            }
        }
        private global::System.String _InfoText;
        partial void OnInfoTextChanging(global::System.String value);
        partial void OnInfoTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                OnLanguageIDChanging(value);
                ReportPropertyChanging("LanguageID");
                _LanguageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageID");
                OnLanguageIDChanged();
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EyeTestInfo_EyeTest", "EyeTest")]
        public EyeTest EyeTest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EyeTest>("db.FK_EyeTestInfo_EyeTest", "EyeTest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EyeTest>("db.FK_EyeTestInfo_EyeTest", "EyeTest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EyeTest> EyeTestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EyeTest>("db.FK_EyeTestInfo_EyeTest", "EyeTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EyeTest>("db.FK_EyeTestInfo_EyeTest", "EyeTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EyeTestInfo_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_EyeTestInfo_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_EyeTestInfo_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_EyeTestInfo_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("db.FK_EyeTestInfo_Language", "Language", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="EyeTestLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EyeTestLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EyeTestLink object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eyeTestID">Initial value of the EyeTestID property.</param>
        /// <param name="opticianID">Initial value of the OpticianID property.</param>
        /// <param name="linkUrl">Initial value of the LinkUrl property.</param>
        public static EyeTestLink CreateEyeTestLink(global::System.Int32 id, global::System.Int32 eyeTestID, global::System.Int32 opticianID, global::System.String linkUrl)
        {
            EyeTestLink eyeTestLink = new EyeTestLink();
            eyeTestLink.ID = id;
            eyeTestLink.EyeTestID = eyeTestID;
            eyeTestLink.OpticianID = opticianID;
            eyeTestLink.LinkUrl = linkUrl;
            return eyeTestLink;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EyeTestID
        {
            get
            {
                return _EyeTestID;
            }
            set
            {
                OnEyeTestIDChanging(value);
                ReportPropertyChanging("EyeTestID");
                _EyeTestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EyeTestID");
                OnEyeTestIDChanged();
            }
        }
        private global::System.Int32 _EyeTestID;
        partial void OnEyeTestIDChanging(global::System.Int32 value);
        partial void OnEyeTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OpticianID
        {
            get
            {
                return _OpticianID;
            }
            set
            {
                OnOpticianIDChanging(value);
                ReportPropertyChanging("OpticianID");
                _OpticianID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpticianID");
                OnOpticianIDChanged();
            }
        }
        private global::System.Int32 _OpticianID;
        partial void OnOpticianIDChanging(global::System.Int32 value);
        partial void OnOpticianIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LinkUrl
        {
            get
            {
                return _LinkUrl;
            }
            set
            {
                OnLinkUrlChanging(value);
                ReportPropertyChanging("LinkUrl");
                _LinkUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LinkUrl");
                OnLinkUrlChanged();
            }
        }
        private global::System.String _LinkUrl;
        partial void OnLinkUrlChanging(global::System.String value);
        partial void OnLinkUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LinkName
        {
            get
            {
                return _LinkName;
            }
            set
            {
                OnLinkNameChanging(value);
                ReportPropertyChanging("LinkName");
                _LinkName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LinkName");
                OnLinkNameChanged();
            }
        }
        private global::System.String _LinkName;
        partial void OnLinkNameChanging(global::System.String value);
        partial void OnLinkNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Language CreateLanguage(global::System.Int32 id, global::System.String name)
        {
            Language language = new Language();
            language.ID = id;
            language.Name = name;
            return language;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EyeTestInfo_Language", "EyeTestInfo")]
        public EntityCollection<EyeTestInfo> EyeTestInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EyeTestInfo>("db.FK_EyeTestInfo_Language", "EyeTestInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EyeTestInfo>("db.FK_EyeTestInfo_Language", "EyeTestInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EquipmentItemInfo_Language", "EquipmentItemInfo")]
        public EntityCollection<EquipmentItemInfo> EquipmentItemInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquipmentItemInfo>("db.FK_EquipmentItemInfo_Language", "EquipmentItemInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquipmentItemInfo>("db.FK_EquipmentItemInfo_Language", "EquipmentItemInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_EquipmentInfo_Language", "EquipmentInfo")]
        public EntityCollection<EquipmentInfo> EquipmentInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquipmentInfo>("db.FK_EquipmentInfo_Language", "EquipmentInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquipmentInfo>("db.FK_EquipmentInfo_Language", "EquipmentInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_User_Language", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("db.FK_User_Language", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("db.FK_User_Language", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Measuring21")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Measuring21 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Measuring21 object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="clientUserID">Initial value of the ClientUserID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static Measuring21 CreateMeasuring21(global::System.Int32 id, global::System.String data, global::System.Int32 clientUserID, global::System.DateTime created)
        {
            Measuring21 measuring21 = new Measuring21();
            measuring21.ID = id;
            measuring21.Data = data;
            measuring21.ClientUserID = clientUserID;
            measuring21.Created = created;
            return measuring21;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientUserID
        {
            get
            {
                return _ClientUserID;
            }
            set
            {
                OnClientUserIDChanging(value);
                ReportPropertyChanging("ClientUserID");
                _ClientUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientUserID");
                OnClientUserIDChanged();
            }
        }
        private global::System.Int32 _ClientUserID;
        partial void OnClientUserIDChanging(global::System.Int32 value);
        partial void OnClientUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_Measuring21_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_Measuring21_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_Measuring21_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_Measuring21_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("db.FK_Measuring21_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="MeasuringControl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeasuringControl : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeasuringControl object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="clientUserID">Initial value of the ClientUserID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static MeasuringControl CreateMeasuringControl(global::System.Int32 id, global::System.String data, global::System.Int32 clientUserID, global::System.DateTime created)
        {
            MeasuringControl measuringControl = new MeasuringControl();
            measuringControl.ID = id;
            measuringControl.Data = data;
            measuringControl.ClientUserID = clientUserID;
            measuringControl.Created = created;
            return measuringControl;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientUserID
        {
            get
            {
                return _ClientUserID;
            }
            set
            {
                OnClientUserIDChanging(value);
                ReportPropertyChanging("ClientUserID");
                _ClientUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientUserID");
                OnClientUserIDChanged();
            }
        }
        private global::System.Int32 _ClientUserID;
        partial void OnClientUserIDChanging(global::System.Int32 value);
        partial void OnClientUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsStart
        {
            get
            {
                return _IsStart;
            }
            set
            {
                OnIsStartChanging(value);
                ReportPropertyChanging("IsStart");
                _IsStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsStart");
                OnIsStartChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsStart;
        partial void OnIsStartChanging(Nullable<global::System.Boolean> value);
        partial void OnIsStartChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_MeasuringControl_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_MeasuringControl_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_MeasuringControl_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_MeasuringControl_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("db.FK_MeasuringControl_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="OpticianClient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OpticianClient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OpticianClient object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="opticianUserID">Initial value of the OpticianUserID property.</param>
        /// <param name="clientUserID">Initial value of the ClientUserID property.</param>
        public static OpticianClient CreateOpticianClient(global::System.Int32 id, global::System.Int32 opticianUserID, global::System.Int32 clientUserID)
        {
            OpticianClient opticianClient = new OpticianClient();
            opticianClient.ID = id;
            opticianClient.OpticianUserID = opticianUserID;
            opticianClient.ClientUserID = clientUserID;
            return opticianClient;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OpticianUserID
        {
            get
            {
                return _OpticianUserID;
            }
            set
            {
                OnOpticianUserIDChanging(value);
                ReportPropertyChanging("OpticianUserID");
                _OpticianUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpticianUserID");
                OnOpticianUserIDChanged();
            }
        }
        private global::System.Int32 _OpticianUserID;
        partial void OnOpticianUserIDChanging(global::System.Int32 value);
        partial void OnOpticianUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientUserID
        {
            get
            {
                return _ClientUserID;
            }
            set
            {
                OnClientUserIDChanging(value);
                ReportPropertyChanging("ClientUserID");
                _ClientUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientUserID");
                OnClientUserIDChanged();
            }
        }
        private global::System.Int32 _ClientUserID;
        partial void OnClientUserIDChanging(global::System.Int32 value);
        partial void OnClientUserIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_OpticianClient_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_OpticianClient_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_OpticianClient_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_OpticianClient_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("db.FK_OpticianClient_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Program")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Program : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Program object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="clientUserID">Initial value of the ClientUserID property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        public static Program CreateProgram(global::System.Int32 id, global::System.Int32 clientUserID, global::System.String comment)
        {
            Program program = new Program();
            program.ID = id;
            program.ClientUserID = clientUserID;
            program.Comment = comment;
            return program;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientUserID
        {
            get
            {
                return _ClientUserID;
            }
            set
            {
                OnClientUserIDChanging(value);
                ReportPropertyChanging("ClientUserID");
                _ClientUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientUserID");
                OnClientUserIDChanged();
            }
        }
        private global::System.Int32 _ClientUserID;
        partial void OnClientUserIDChanging(global::System.Int32 value);
        partial void OnClientUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_ProgramEyeTest_Program", "ProgramEyeTest")]
        public EntityCollection<ProgramEyeTest> ProgramEyeTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProgramEyeTest>("db.FK_ProgramEyeTest_Program", "ProgramEyeTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProgramEyeTest>("db.FK_ProgramEyeTest_Program", "ProgramEyeTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_Program_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_Program_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_Program_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("db.FK_Program_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("db.FK_Program_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="ProgramEyeTest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProgramEyeTest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProgramEyeTest object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="programID">Initial value of the ProgramID property.</param>
        /// <param name="eyeTestID">Initial value of the EyeTestID property.</param>
        /// <param name="locked">Initial value of the Locked property.</param>
        /// <param name="lockedByOptician">Initial value of the LockedByOptician property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static ProgramEyeTest CreateProgramEyeTest(global::System.Int32 id, global::System.Int32 programID, global::System.Int32 eyeTestID, global::System.Boolean locked, global::System.Boolean lockedByOptician, global::System.Int32 priority, global::System.Boolean active)
        {
            ProgramEyeTest programEyeTest = new ProgramEyeTest();
            programEyeTest.ID = id;
            programEyeTest.ProgramID = programID;
            programEyeTest.EyeTestID = eyeTestID;
            programEyeTest.Locked = locked;
            programEyeTest.LockedByOptician = lockedByOptician;
            programEyeTest.Priority = priority;
            programEyeTest.Active = active;
            return programEyeTest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProgramID
        {
            get
            {
                return _ProgramID;
            }
            set
            {
                OnProgramIDChanging(value);
                ReportPropertyChanging("ProgramID");
                _ProgramID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProgramID");
                OnProgramIDChanged();
            }
        }
        private global::System.Int32 _ProgramID;
        partial void OnProgramIDChanging(global::System.Int32 value);
        partial void OnProgramIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EyeTestID
        {
            get
            {
                return _EyeTestID;
            }
            set
            {
                OnEyeTestIDChanging(value);
                ReportPropertyChanging("EyeTestID");
                _EyeTestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EyeTestID");
                OnEyeTestIDChanged();
            }
        }
        private global::System.Int32 _EyeTestID;
        partial void OnEyeTestIDChanging(global::System.Int32 value);
        partial void OnEyeTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Locked
        {
            get
            {
                return _Locked;
            }
            set
            {
                OnLockedChanging(value);
                ReportPropertyChanging("Locked");
                _Locked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Locked");
                OnLockedChanged();
            }
        }
        private global::System.Boolean _Locked;
        partial void OnLockedChanging(global::System.Boolean value);
        partial void OnLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LockedByOptician
        {
            get
            {
                return _LockedByOptician;
            }
            set
            {
                OnLockedByOpticianChanging(value);
                ReportPropertyChanging("LockedByOptician");
                _LockedByOptician = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockedByOptician");
                OnLockedByOpticianChanged();
            }
        }
        private global::System.Boolean _LockedByOptician;
        partial void OnLockedByOpticianChanging(global::System.Boolean value);
        partial void OnLockedByOpticianChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_ProgramEyeTest_EyeTest", "EyeTest")]
        public EyeTest EyeTest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EyeTest>("db.FK_ProgramEyeTest_EyeTest", "EyeTest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EyeTest>("db.FK_ProgramEyeTest_EyeTest", "EyeTest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EyeTest> EyeTestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EyeTest>("db.FK_ProgramEyeTest_EyeTest", "EyeTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EyeTest>("db.FK_ProgramEyeTest_EyeTest", "EyeTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_ProgramEyeTest_Program", "Program")]
        public Program Program
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Program>("db.FK_ProgramEyeTest_Program", "Program").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Program>("db.FK_ProgramEyeTest_Program", "Program").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Program> ProgramReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Program>("db.FK_ProgramEyeTest_Program", "Program");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Program>("db.FK_ProgramEyeTest_Program", "Program", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_ClientEyeTestLog_ProgramEyeTest", "ClientEyeTestLog")]
        public EntityCollection<ClientEyeTestLog> ClientEyeTestLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientEyeTestLog>("db.FK_ClientEyeTestLog_ProgramEyeTest", "ClientEyeTestLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientEyeTestLog>("db.FK_ClientEyeTestLog_ProgramEyeTest", "ClientEyeTestLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="middleName">Initial value of the MiddleName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String fullName, global::System.String firstName, global::System.String middleName, global::System.String lastName, global::System.String address, global::System.String postalCode, global::System.String city, global::System.Int32 countryID, global::System.Boolean enabled, global::System.DateTime createdOn)
        {
            User user = new User();
            user.ID = id;
            user.FullName = fullName;
            user.FirstName = firstName;
            user.MiddleName = middleName;
            user.LastName = lastName;
            user.Address = address;
            user.PostalCode = postalCode;
            user.City = city;
            user.CountryID = countryID;
            user.Enabled = enabled;
            user.CreatedOn = createdOn;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.String _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.String value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserTypeID
        {
            get
            {
                return _UserTypeID;
            }
            set
            {
                OnUserTypeIDChanging(value);
                ReportPropertyChanging("UserTypeID");
                _UserTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserTypeID");
                OnUserTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserTypeID;
        partial void OnUserTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MustChangePassword
        {
            get
            {
                return _MustChangePassword;
            }
            set
            {
                OnMustChangePasswordChanging(value);
                ReportPropertyChanging("MustChangePassword");
                _MustChangePassword = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MustChangePassword");
                OnMustChangePasswordChanged();
            }
        }
        private Nullable<global::System.Boolean> _MustChangePassword;
        partial void OnMustChangePasswordChanging(Nullable<global::System.Boolean> value);
        partial void OnMustChangePasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OldDatabaseID
        {
            get
            {
                return _OldDatabaseID;
            }
            set
            {
                OnOldDatabaseIDChanging(value);
                ReportPropertyChanging("OldDatabaseID");
                _OldDatabaseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldDatabaseID");
                OnOldDatabaseIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OldDatabaseID;
        partial void OnOldDatabaseIDChanging(Nullable<global::System.Int32> value);
        partial void OnOldDatabaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                OnLanguageIDChanging(value);
                ReportPropertyChanging("LanguageID");
                _LanguageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageID");
                OnLanguageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LanguageID;
        partial void OnLanguageIDChanging(Nullable<global::System.Int32> value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PudData
        {
            get
            {
                return _PudData;
            }
            set
            {
                OnPudDataChanging(value);
                ReportPropertyChanging("PudData");
                _PudData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PudData");
                OnPudDataChanged();
            }
        }
        private global::System.String _PudData;
        partial void OnPudDataChanging(global::System.String value);
        partial void OnPudDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private global::System.String _Lat;
        partial void OnLatChanging(global::System.String value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Long
        {
            get
            {
                return _Long;
            }
            set
            {
                OnLongChanging(value);
                ReportPropertyChanging("Long");
                _Long = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Long");
                OnLongChanged();
            }
        }
        private global::System.String _Long;
        partial void OnLongChanging(global::System.String value);
        partial void OnLongChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OldPassword
        {
            get
            {
                return _OldPassword;
            }
            set
            {
                OnOldPasswordChanging(value);
                ReportPropertyChanging("OldPassword");
                _OldPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OldPassword");
                OnOldPasswordChanged();
            }
        }
        private global::System.String _OldPassword;
        partial void OnOldPasswordChanging(global::System.String value);
        partial void OnOldPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ShowOnMap
        {
            get
            {
                return _ShowOnMap;
            }
            set
            {
                OnShowOnMapChanging(value);
                ReportPropertyChanging("ShowOnMap");
                _ShowOnMap = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowOnMap");
                OnShowOnMapChanged();
            }
        }
        private Nullable<global::System.Boolean> _ShowOnMap;
        partial void OnShowOnMapChanging(Nullable<global::System.Boolean> value);
        partial void OnShowOnMapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TermsAccepted
        {
            get
            {
                return _TermsAccepted;
            }
            set
            {
                OnTermsAcceptedChanging(value);
                ReportPropertyChanging("TermsAccepted");
                _TermsAccepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TermsAccepted");
                OnTermsAcceptedChanged();
            }
        }
        private Nullable<global::System.Boolean> _TermsAccepted;
        partial void OnTermsAcceptedChanging(Nullable<global::System.Boolean> value);
        partial void OnTermsAcceptedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_ActivationCode_User", "ActivationCode")]
        public EntityCollection<ActivationCode> ActivationCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivationCode>("db.FK_ActivationCode_User", "ActivationCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivationCode>("db.FK_ActivationCode_User", "ActivationCode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_Anamnese_User", "Anamnese")]
        public EntityCollection<Anamnese> Anamnese
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Anamnese>("db.FK_Anamnese_User", "Anamnese");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Anamnese>("db.FK_Anamnese_User", "Anamnese", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_User_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("db.FK_User_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("db.FK_User_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("db.FK_User_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("db.FK_User_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_User_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_User_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_User_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("db.FK_User_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("db.FK_User_Language", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_Measuring21_User", "Measuring21")]
        public EntityCollection<Measuring21> Measuring21
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Measuring21>("db.FK_Measuring21_User", "Measuring21");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Measuring21>("db.FK_Measuring21_User", "Measuring21", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_MeasuringControl_User", "MeasuringControl")]
        public EntityCollection<MeasuringControl> MeasuringControls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeasuringControl>("db.FK_MeasuringControl_User", "MeasuringControl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeasuringControl>("db.FK_MeasuringControl_User", "MeasuringControl", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_OpticianClient_User", "OpticianClient")]
        public EntityCollection<OpticianClient> OpticianClients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpticianClient>("db.FK_OpticianClient_User", "OpticianClient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpticianClient>("db.FK_OpticianClient_User", "OpticianClient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_Program_User", "Program")]
        public EntityCollection<Program> Programs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Program>("db.FK_Program_User", "Program");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Program>("db.FK_Program_User", "Program", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_User_UserType", "UserType")]
        public UserType UserType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("db.FK_User_UserType", "UserType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("db.FK_User_UserType", "UserType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserType> UserTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("db.FK_User_UserType", "UserType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserType>("db.FK_User_UserType", "UserType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="UserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UserType CreateUserType(global::System.Int32 id, global::System.String name)
        {
            UserType userType = new UserType();
            userType.ID = id;
            userType.Name = name;
            return userType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "FK_User_UserType", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("db.FK_User_UserType", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("db.FK_User_UserType", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
